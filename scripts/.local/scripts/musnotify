#!/usr/bin/env bash

# Simple ncmpcpp notification script by Gerome Matilla (gerome.matilla07@gmail.com)
#	Depends on:
#		- mpc, mpd, ncmpcpp, imagemagick, ffmpeg, [optionally] perl-image-exiftool

msgId="93435"
MUSIC_DIR="${HOME}/mus"
TMP_COVER_PATH="/tmp/ncmpcpp_cover-${USER}.jpg"
TMP_SONG="/tmp/current-song"
CHECK_EXIFTOOL=$(command -v exiftool)
CHECK_DUNST=$(command -v dunst)

current_title="$(mpc -f %title% current | tr -d '"')"
current_artist="$(mpc -f %artist% current | tr -d '"')"

# Exit if $USER is in TTY
	if [ "$TERM" = "linux" ]; then
	  exit 1
	fi

# Remove file extension name
	check_mpc_data() {
		if [ -z "$current_title" ]; then
			file_name="$(mpc -f %file% current | tr -d '"')"
			file_name=${file_name::-4}
			current_title="${file_name}"
			current_artist='unknown artist'
		fi
	}

check_mpc_data

# Extract album cover
	if [ -n "$CHECK_EXIFTOOL" ]; then

		SONG="$MUSIC_DIR/$(mpc --format "%file%" current)"
		PICTURE_TAG="-Picture"

		if [[ "$SONG" = *".m4a" ]]; then
			PICTURE_TAG="-CoverArt"
		fi

		# Extract album cover using perl-image-exiftool
		exiftool -b "$PICTURE_TAG" "$SONG"  > "$TMP_COVER_PATH" 2>/dev/null
	else
		#Extract image using ffmpeg
		cp "$MUSIC_DIR/$(mpc --format %file% current)" "$TMP_SONG"

		ffmpeg \
		-hide_banner \
	    -loglevel 0 \
	    -y \
	    -i "$TMP_SONG" \
	    -vf scale=300:-1 \
	    "$TMP_COVER_PATH" > /dev/null 2>&1

		rm "$TMP_SONG"
	fi

# Check if image is valid
	function check_album_data() {
		img_data=$(identify "$TMP_COVER_PATH" 2>&1)
		if [[ "$img_data" = *"insufficient"* ]]; then
			TMP_COVER_PATH="$XDG_DATA_HOME/icons/vinyl.svg"
		fi
	}

	check_album_data

# Create a notification
	function notify() {
		if [ -n "$CHECK_DUNST" ]; then
			notify-send --urgency "normal" -a "ncmpcpp" \
			-r "$msgId" --icon "$TMP_COVER_PATH" "$current_title" "$current_artist"
		else
			notify-send --urgency "normal" --app-name "ncmpcpp" \
			--icon "$TMP_COVER_PATH" "$current_title" "$current_artist"
		fi
	}

	notify
